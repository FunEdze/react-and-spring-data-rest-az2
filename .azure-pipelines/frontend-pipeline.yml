trigger:
  branches:
    include:
      - main

variables:
  - group: AzureCredentials
  - group: DatabaseCredentials
  - group: InfrastructureDetails

pool:
  vmImage: 'ubuntu-latest'

steps:
  # Check if backend is ready
  - task: Kubernetes@1
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscriptionEndpoint: 'Azure-Service-Connection-1'
      azureResourceGroup: 'devops_assignment_rg'
      kubernetesCluster: 'devopsAssignmentAKS'
      command: 'get'
      arguments: 'deployment backend-deployment'
    displayName: 'Check Backend Status'
    continueOnError: false

  - task: NodeTool@0
    inputs:
      versionSpec: '16.x'
    displayName: 'Install Node.js'

  - script: |
      npm install
      npm run build
    displayName: 'Build Frontend'

  - task: AzureCLI@2
    inputs:
      azureSubscription: 'Azure-Service-Connection-1'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        az acr login --name devopsassignmentacr

  - script: |
      docker build -t devopsassignmentacr.azurecr.io/frontend-image:$(Build.BuildId) -f frontend/Dockerfile .
      docker tag devopsassignmentacr.azurecr.io/frontend-image:$(Build.BuildId) devopsassignmentacr.azurecr.io/frontend-image:latest
      docker push devopsassignmentacr.azurecr.io/frontend-image:$(Build.BuildId)
      docker push devopsassignmentacr.azurecr.io/frontend-image:latest
    displayName: 'Build and Push Frontend Docker Image'

  # Deploy to AKS
  - task: Kubernetes@1
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscriptionEndpoint: 'Azure-Service-Connection-1'
      azureResourceGroup: 'devops_assignment_rg'
      kubernetesCluster: 'devopsAssignmentAKS'
      namespace: 'default'
      command: 'apply'
      arguments: '-f k8s/frontend-deployment.yml'