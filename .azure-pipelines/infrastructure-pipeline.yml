trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: AzureCredentials
  - group: DatabaseCredentials  # Make sure this variable group contains SQL_ADMIN_USERNAME and SQL_ADMIN_PASSWORD

steps:
  - task: TerraformInstaller@0
    inputs:
      terraformVersion: 'latest'

  - task: AzureCLI@2
    inputs:
      azureSubscription: 'Azure-Service-Connection-1'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # Navigate to the directory containing your Terraform files
        cd infrastructure
        
        # Debug: Print variables (mask sensitive data)
        echo "Using subscription: $(subscription_id)"
        echo "SQL Username is set: $([[ ! -z "${SQL_ADMIN_USERNAME}" ]] && echo 'Yes' || echo 'No')"
        echo "SQL Password is set: $([[ ! -z "${SQL_ADMIN_PASSWORD}" ]] && echo 'Yes' || echo 'No')"
        
        # Initialize Terraform
        terraform init
        
        # Create a variables file
        cat << EOF > terraform.tfvars
        subscription_id = "$(subscription_id)"
        sql_admin_username = "$(SQL_ADMIN_USERNAME)"
        sql_admin_password = "$(SQL_ADMIN_PASSWORD)"
        EOF
        
        # Plan and apply infrastructure changes
        terraform plan -out=tfplan
        terraform apply -auto-approve tfplan
        
        # Clean up sensitive data
        rm terraform.tfvars

    displayName: 'Deploy Infrastructure with Terraform'